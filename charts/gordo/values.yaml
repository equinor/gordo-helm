# Default values for gordo.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


images:
  pullPolicy: IfNotPresent
  pullSecrets: []

controller:
  name: "controller"

  replicaCount: 1

  annotations: {}

  image:
    registry: ghcr.io
    repository: equinor/gordo-controller
    pullPolicy: ""
    tag: ""

  nameOverride: ""
  fullnameOverride: ""

  containerPort: 8888

  rustLog: "debug,kube=debug"
  defaultDeployEnvironment: {}

  deployImage:
    registry: ghcr.io
    repository: equinor/gordo-base

  env: {}

  serviceAccount:
    create: true
    name: ""

  rbac:
    create: true

  podAnnotations: {}

  probe: {}

  service:
    type: ClusterIP
    portName: "api"
    port: 80

  portName: "http-api"

  ingress:
    enabled: false
    className: ""
    annotations: {}
    hosts:
      - gordo.local
    tls:
      enabled: false
      secretName: ""

  istio:
    hosts: []
    gateways: []

  resources: {}
    # limits:
    #   cpu: 500m
    #   memory: 500Mi
    # requests:
    #   cpu: 10m
    #   memory: 250Mi

  volumes: []

  nodeSelector: {}

  tolerations: []

  affinity: {}

  topologySpreadConstraints: []

crds:
  install: true

  keep: true
  annotations: {}

monitoring:
  enabled: false

  annotations: {}

istio:
  component: "istio"

  enabled: false

  annotations: {}

  gateway:
    create: false

    selector: {}
    hosts:
    - minikube.local

    http:
      port: 80
    https:
      enabled: false
      port: 443
      tls:
        mode: SIMPLE
        secretName: ""

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

podSecurityContext: {}
  # fsGroup: 2000

# Apply extra labels to common labels.
extraLabels: {}

runtime:
  name: "runtime"

  create: true

  modelBuilderConfig:
    create: true

    data: {}

  serverPriority:
    create: true

    value: 100
    globalDefault: false

  pvc:
    create: true

    size: "200Mi"
    storageClassName: ""

argoRunner:
  name: "argo-runner"

  annotations: {}

  rbac:
    create: true

  serviceAccount:
    create: true
    name: ""
    annotations: {}

argo-workflows:
  enabled: false
